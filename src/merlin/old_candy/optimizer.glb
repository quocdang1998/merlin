// Copyright 2023 quocdang1998
#include "merlin/candy/optimizer.hpp"

namespace merlin {

// Kernel creating object on GPU
__global__ static void create_kernel(candy::Optimizer ** p_ref_ada_grad) { *p_ref_ada_grad = new candy::Optimizer(); }

// Kernel deleting object on GPU
__global__ static void delete_kernel(candy::Optimizer * p_grad_descent) { delete p_grad_descent; }

// Create an object on GPU by the GPU
candy::Optimizer * candy::Optimizer::new_gpu(void) const {
    ::cudaStream_t stream = reinterpret_cast<::cudaStream_t>(0);
    candy::Optimizer ** p_ref_optimizer_gpu;
    ::cudaMalloc(&p_ref_optimizer_gpu, sizeof(candy::Optimizer *));
    create_kernel<<<1, 1, 0, stream>>>(p_ref_optimizer_gpu);
    candy::Optimizer * result;
    ::cudaMemcpy(&result, p_ref_optimizer_gpu, sizeof(candy::Optimizer *), ::cudaMemcpyDeviceToHost);
    ::cudaFree(p_ref_optimizer_gpu);
    return result;
}

// Destroy an object by GPU
void candy::Optimizer::delete_gpu(candy::Optimizer * p_optimizer) {
    ::cudaStream_t stream = reinterpret_cast<::cudaStream_t>(0);
    delete_kernel<<<1, 1, 0, stream>>>(p_optimizer);
}

}  // namespace merlin
