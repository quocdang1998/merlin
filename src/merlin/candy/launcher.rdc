// Copyright 2023 quocdang1998
#include "merlin/candy/launcher.hpp"

namespace merlin {

// ---------------------------------------------------------------------------------------------------------------------
// Model gradient
// ---------------------------------------------------------------------------------------------------------------------

// Convert contiguous index to ndim index with a dimension fixed (to be improved to GPU version)
__cuhostdev__ intvec candy::contiguous_to_ndim_idx_1(std::uint64_t index, const intvec & shape, std::uint64_t skip_dim,
                                                     std::uint64_t * data_ptr) {
    // calculate index vector
    intvec index_;
    if (data_ptr != nullptr) {
        index_.assign(data_ptr, shape.size());
    } else {
        index_ = intvec(shape.size());
    }
    if (shape.size() == 0) {
        return index_;  // empty shape vector
    }
    std::uint64_t cum_prod = 1;
    std::uint64_t start_index = (skip_dim == shape.size() - 1) ? shape.size() - 2 : shape.size() - 1;
    index_[start_index] = index % shape[start_index];
    for (std::int64_t i = start_index - 1; i >= 0; i--) {
        cum_prod *= (i != skip_dim - 1) ? shape[i + 1] : 1;
        index_[i] = (i != skip_dim) ? (index / cum_prod) % shape[i] : index_[i];
    }
    return index_;
}

}  // namespace merlin
